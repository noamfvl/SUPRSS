services:
  db:
    image: postgres:16
    env_file:
      - ./.env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 20
    restart: always 

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    restart: always

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    env_file:
      - ./.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    ports:
      - "${API_PORT}"
    restart: always

  web:
    build:
      context: ./web
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
    env_file:
      - ./.env
    depends_on:
      api:
        condition: service_started
    ports:
      - "${WEB_PORT}"
    restart: always

volumes:
  db_data:
  redis_data:
